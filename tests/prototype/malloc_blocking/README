This sample demonstrates how device-malloc blocks streamed
kernel execution, while *theoretically* it should not, because
space for it is preallocated.

[marcusmae@noisy malloc_blocking]$ make
nvcc -g -arch=sm_20 malloc_blocking.cu -o malloc_blocking -lcuda
[marcusmae@noisy malloc_blocking]$ ./malloc_blocking
Usage: ./malloc_blocking <mode>
mode = 0: launch kernel1 and kernel2 without device-malloc (will succeed)
mode = 1: launch kernel1 and kernel3 with device-malloc (will hang)
[marcusmae@noisy malloc_blocking]$ ./malloc_blocking 0
[marcusmae@noisy malloc_blocking]$ ./malloc_blocking 1
^C


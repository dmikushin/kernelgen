COMP = kernelgen-gcc -include malloc.h

BASE = ../..

TARGETS = 2mm 3mm atax bicg

.PHONY: $(TARGETS)

.SUFFIXES:
.SUFFIXES: .base .time .ref .papi .o.base .o.time .o.ref .o.papi

all: $(TARGETS)

polybench.o: $(BASE)/utilities/polybench.c
	$(COMP) -DPOLYBENCH_TIME -DPOLYBENCH_PAPI -c $< -o $@

TARGETS_CLEAN = $(addsuffix .*, $(TARGETS))

clean:
	rm -rf *.o $(TARGETS_CLEAN)

%.base: polybench.o %.base.o
	$(COMP) $^ -o $@ -lpapi

%.time: polybench.o %.time.o
	$(COMP) $^ -o $@ -lpapi

%.ref: polybench.o %.ref.o
	$(COMP) $^ -o $@ -lpapi

%.papi: polybench.o %.papi.o
	$(COMP) $^ -o $@ -lpapi

#
# 2MM
#

B2MM = $(BASE)/linear-algebra/kernels/2mm
F2MM = -D$(SIZE) -I$(BASE)/utilities -I$(B2MM)

2mm: 2mm.base 2mm.time 2mm.ref 2mm.papi

2mm.base.o: $(B2MM)/2mm.c
	$(COMP) $(F2MM) -c $^ -o $@

2mm.time.o: $(B2MM)/2mm.c
	$(COMP) -DPOLYBENCH_TIME $(F2MM) -c $< -o $@

2mm.ref.o: $(B2MM)/2mm.c
	$(COMP) -O0 -DPOLYBENCH_DUMP_ARRAYS $(F2MM) -c $< -o $@

2mm.papi.o: $(B2MM)/2mm.c
	$(COMP) -O3 -DPOLYBENCH_PAPI $(F2MM) -c $< -o $@

#
# 3MM
#

B3MM = $(BASE)/linear-algebra/kernels/3mm
F3MM = -D$(SIZE) -I$(BASE)/utilities -I$(B3MM)

3mm: 3mm.base 3mm.time 3mm.ref 3mm.papi

3mm.base.o: $(B3MM)/3mm.c
	$(COMP) $(F3MM) -c $^ -o $@

3mm.time.o: $(B3MM)/3mm.c
	$(COMP) -DPOLYBENCH_TIME $(F3MM) -c $< -o $@

3mm.ref.o: $(B3MM)/3mm.c
	$(COMP) -O0 -DPOLYBENCH_DUMP_ARRAYS $(F3MM) -c $< -o $@

3mm.papi.o: $(B3MM)/3mm.c
	$(COMP) -O3 -DPOLYBENCH_PAPI $(F3MM) -c $< -o $@ -lpapi

#
# ATAX
#

BATAX = $(BASE)/linear-algebra/kernels/atax
FATAX = -D$(SIZE) -I$(BASE)/utilities -I$(BATAX)

atax: atax.base atax.time atax.ref atax.papi

atax.base.o: $(BATAX)/atax.c
	$(COMP) $(FATAX) -c $< -o $@

atax.time.o: $(BATAX)/atax.c
	$(COMP) -DPOLYBENCH_TIME $(FATAX) -c $< -o $@

atax.ref.o: $(BATAX)/atax.c
	$(COMP) -O0 -DPOLYBENCH_DUMP_ARRAYS $(FATAX) -c $< -o $@

atax.papi.o: $(BATAX)/atax.c
	$(COMP) -O3 -DPOLYBENCH_PAPI $(FATAX) -c $< -o $@ -lpapi

#
# BICG
#

BBICG = $(BASE)/linear-algebra/kernels/bicg
FBICG = -D$(SIZE) -I$(BASE)/utilities -I$(BBICG)

bicg: bicg.base bicg.time bicg.ref bicg.papi

bicg.base.o: $(BBICG)/bicg.c
	$(COMP) $(FBICG) -c $< -o $@

bicg.time.o: $(BBICG)/bicg.c
	$(COMP) -DPOLYBENCH_TIME $(FBICG) -c $< -o $@

bicg.ref.o: $(BBICG)/bicg.c
	$(COMP) -O0 -DPOLYBENCH_DUMP_ARRAYS $(FBICG) -c $< -o $@

bicg.papi.o: $(BBICG)/bicg.c
	$(COMP) -O3 -DPOLYBENCH_PAPI $(FBICG) -c $< -o $@ -lpapi


--- a/llvm/lib/Target/CBackend/CBackend.cpp	2011-08-01 00:26:34.734483962 +0400
+++ b/llvm/lib/Target/CBackend/CBackend.cpp	2011-08-01 00:25:49.325513362 +0400
@@ -397,11 +397,11 @@
         /*isSigned=*/PAL.paramHasAttr(Idx, Attribute::SExt), "");
     PrintedType = true;
   }
-  if (FTy->isVarArg()) {
+  /*if (FTy->isVarArg()) {
     if (!PrintedType)
       FunctionInnards << " int"; //dummy argument for empty vararg functs
     FunctionInnards << ", ...";
-  } else if (!PrintedType) {
+  } else*/ if (!PrintedType) {
     FunctionInnards << "void";
   }
   FunctionInnards << ')';
@@ -491,11 +491,11 @@
         /*isSigned=*/PAL.paramHasAttr(Idx, Attribute::SExt), "");
       ++Idx;
     }
-    if (FTy->isVarArg()) {
+    /*if (FTy->isVarArg()) {
       if (!FTy->getNumParams())
         FunctionInnards << " int"; //dummy argument for empty vaarg functs
       FunctionInnards << ", ...";
-    } else if (!FTy->getNumParams()) {
+    } else*/ if (!FTy->getNumParams()) {
       FunctionInnards << "void";
     }
     FunctionInnards << ')';
@@ -2192,10 +2192,10 @@
     }
   }
 
-  if (!PrintedArg && FT->isVarArg()) {
+  /*if (!PrintedArg && FT->isVarArg()) {
     FunctionInnards << "int vararg_dummy_arg";
     PrintedArg = true;
-  }
+  }*/
 
   // Finish printing arguments... if this is a vararg function, print the ...,
   // unless there are no known types, in which case, we just emit ().
@@ -2969,10 +2969,10 @@
   Out << '(';
 
   bool PrintedArg = false;
-  if(FTy->isVarArg() && !FTy->getNumParams()) {
-    Out << "0 /*dummy arg*/";
+  /*if(FTy->isVarArg() && !FTy->getNumParams()) {
+    Out << "0 /*dummy arg*";
     PrintedArg = true;
-  }
+  }*/
 
   unsigned NumDeclaredParams = FTy->getNumParams();
   CallSite CS(&I);

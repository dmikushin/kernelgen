--- a/llvm/lib/Support/Statistic.cpp	2012-02-22 22:03:34.000000000 +0400
+++ b/llvm/lib/Support/Statistic.cpp	2012-03-22 21:47:26.967260026 +0400
@@ -34,7 +34,8 @@
 using namespace llvm;
 
 // CreateInfoOutputFile - Return a file stream to print our output on.
-namespace llvm { extern raw_ostream *CreateInfoOutputFile(); }
+namespace llvm { extern raw_ostream *CreateInfoOutputFile();
+                 void RemoveStatistics(); }
 
 /// -stats - Command line option to cause transformations to emit stats about
 /// what they did.
@@ -48,13 +49,14 @@
 /// on demand (when the first statistic is bumped) and destroyed only when
 /// llvm_shutdown is called.  We print statistics from the destructor.
 class StatisticInfo {
-  std::vector<const Statistic*> Stats;
+  std::vector<Statistic*> Stats;
   friend void llvm::PrintStatistics();
+  friend void llvm::RemoveStatistics();
   friend void llvm::PrintStatistics(raw_ostream &OS);
 public:
   ~StatisticInfo();
 
-  void addStatistic(const Statistic *S) {
+  void addStatistic(Statistic *S) {
     Stats.push_back(S);
   }
 };
@@ -105,6 +107,18 @@
   Enabled.setValue(true);
 }
 
+void llvm::RemoveStatistics() {
+  Enabled.setValue(false);
+  StatisticInfo &Stats = *StatInfo;
+  for (size_t i = 0, e = Stats.Stats.size(); i != e; ++i)
+  {
+	  (*Stats.Stats[i]) = 0;
+	  Stats.Stats[i] -> Initialized = false;
+  }
+  while(Stats.Stats.size())
+	  Stats.Stats.pop_back();
+}
+
 bool llvm::AreStatisticsEnabled() {
   return Enabled;
 }

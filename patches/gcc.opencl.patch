--- a/gcc-4.6.3/gcc/fortran/mathbuiltins.def	2011-09-15 13:15:57.000000000 +0400
+++ b/gcc-4.6.3/gcc/fortran/mathbuiltins.def	2011-09-15 20:03:00.914530592 +0400
@@ -23,34 +23,34 @@
 
    Use DEFINE_MATH_BUILTIN_C if the complex versions of the builtin are
    also available.  */
-DEFINE_MATH_BUILTIN_C (ACOS,  "acos",   0)
-DEFINE_MATH_BUILTIN_C (ACOSH, "acosh",  0)
-DEFINE_MATH_BUILTIN_C (ASIN,  "asin",   0)
-DEFINE_MATH_BUILTIN_C (ASINH, "asinh",  0)
-DEFINE_MATH_BUILTIN_C (ATAN,  "atan",   0)
-DEFINE_MATH_BUILTIN_C (ATANH, "atanh",  0)
-DEFINE_MATH_BUILTIN   (ATAN2, "atan2",  1)
-DEFINE_MATH_BUILTIN_C (COS,   "cos",    0)
-DEFINE_MATH_BUILTIN_C (COSH,  "cosh",   0)
-DEFINE_MATH_BUILTIN_C (EXP,   "exp",    0)
-DEFINE_MATH_BUILTIN_C (LOG,   "log",    0)
-DEFINE_MATH_BUILTIN_C (LOG10, "log10",  0)
-DEFINE_MATH_BUILTIN_C (SIN,   "sin",    0)
-DEFINE_MATH_BUILTIN_C (SINH,  "sinh",   0)
-DEFINE_MATH_BUILTIN_C (SQRT,  "sqrt",   0)
-DEFINE_MATH_BUILTIN_C (TAN,   "tan",    0)
-DEFINE_MATH_BUILTIN_C (TANH,  "tanh",   0)
-DEFINE_MATH_BUILTIN   (J0,    "j0",     0)
-DEFINE_MATH_BUILTIN   (J1,    "j1",     0)
-DEFINE_MATH_BUILTIN   (JN,    "jn",     2)
-DEFINE_MATH_BUILTIN   (Y0,    "y0",     0)
-DEFINE_MATH_BUILTIN   (Y1,    "y1",     0)
-DEFINE_MATH_BUILTIN   (YN,    "yn",     2)
-DEFINE_MATH_BUILTIN   (ERF,   "erf",    0)
-DEFINE_MATH_BUILTIN   (ERFC,  "erfc",   0)
-DEFINE_MATH_BUILTIN   (TGAMMA,"tgamma", 0)
-DEFINE_MATH_BUILTIN   (LGAMMA,"lgamma", 0)
-DEFINE_MATH_BUILTIN   (HYPOT, "hypot",  1)
+DEFINE_MATH_BUILTIN_C (ACOS,   "acos",   0, true, 1)
+DEFINE_MATH_BUILTIN_C (ACOSH,  "acosh",  0, true, 1)
+DEFINE_MATH_BUILTIN_C (ASIN,   "asin",   0, true, 1)
+DEFINE_MATH_BUILTIN_C (ASINH,  "asinh",  0, true, 1)
+DEFINE_MATH_BUILTIN_C (ATAN,   "atan",   0, true, 1)
+DEFINE_MATH_BUILTIN_C (ATANH,  "atanh",  0, true, 1)
+DEFINE_MATH_BUILTIN   (ATAN2,  "atan2",  1, true, 1)
+DEFINE_MATH_BUILTIN_C (COS,    "cos",    0, true, 1)
+DEFINE_MATH_BUILTIN_C (COSH,   "cosh",   0, true, 1)
+DEFINE_MATH_BUILTIN_C (EXP,    "exp",    0, true, 1)
+DEFINE_MATH_BUILTIN_C (LOG,    "log",    0, true, 1)
+DEFINE_MATH_BUILTIN_C (LOG10,  "log10",  0, true, 1)
+DEFINE_MATH_BUILTIN_C (SIN,    "sin",    0, true, 1)
+DEFINE_MATH_BUILTIN_C (SINH,   "sinh",   0, true, 1)
+DEFINE_MATH_BUILTIN_C (SQRT,   "sqrt",   0, true, 1)
+DEFINE_MATH_BUILTIN_C (TAN,    "tan",    0, true, 1)
+DEFINE_MATH_BUILTIN_C (TANH,   "tanh",   0, true, 1)
+DEFINE_MATH_BUILTIN   (J0,     "j0",     0, true, 0)
+DEFINE_MATH_BUILTIN   (J1,     "j1",     0, true, 0)
+DEFINE_MATH_BUILTIN   (JN,     "jn",     2, true, 0)
+DEFINE_MATH_BUILTIN   (Y0,     "y0",     0, true, 0)
+DEFINE_MATH_BUILTIN   (Y1,     "y1",     0, true, 0)
+DEFINE_MATH_BUILTIN   (YN,     "yn",     2, true, 0)
+DEFINE_MATH_BUILTIN   (ERF,    "erf",    0, true, 1)
+DEFINE_MATH_BUILTIN   (ERFC,   "erfc",   0, true, 1)
+DEFINE_MATH_BUILTIN   (TGAMMA, "tgamma", 0, true, 1)
+DEFINE_MATH_BUILTIN   (LGAMMA, "lgamma", 0, true, 1)
+DEFINE_MATH_BUILTIN   (HYPOT,  "hypot",  1, true, 1)
 
 /* OTHER_BUILTIN (CODE, NAME, PROTOTYPE_TYPE, CONST)
    For floating-point builtins that do not directly correspond to a
--- a/gcc-4.6.3/gcc/common.opt	2011-09-15 13:17:35.000000000 +0400
+++ b/gcc-4.6.3/gcc/common.opt	2011-09-15 20:05:11.834713455 +0400
@@ -2350,4 +2350,8 @@
 z
 Driver Joined Separate
 
+fopencl-math-builtins
+Common Var(flag_opencl_math_builtins)
+Emit Fortran math builtins in a way compatible with OpenCL
+
 ; This comment is to ensure we retain the blank line above.
--- a/gcc-4.6.3/gcc/fortran/f95-lang.c	2011-09-15 13:15:57.000000000 +0400
+++ b/gcc-4.6.3/gcc/fortran/f95-lang.c	2011-09-15 20:25:57.526453317 +0400
@@ -662,23 +662,22 @@
 }
 
 
-#define DO_DEFINE_MATH_BUILTIN(code, name, argtype, tbase) \
-    gfc_define_builtin ("__builtin_" name "l", tbase##longdouble[argtype], \
-			BUILT_IN_ ## code ## L, name "l", \
-			ATTR_CONST_NOTHROW_LEAF_LIST); \
-    gfc_define_builtin ("__builtin_" name, tbase##double[argtype], \
-			BUILT_IN_ ## code, name, \
-			ATTR_CONST_NOTHROW_LEAF_LIST); \
-    gfc_define_builtin ("__builtin_" name "f", tbase##float[argtype], \
-			BUILT_IN_ ## code ## F, name "f", \
-			ATTR_CONST_NOTHROW_LEAF_LIST);
-
-#define DEFINE_MATH_BUILTIN(code, name, argtype) \
-    DO_DEFINE_MATH_BUILTIN (code, name, argtype, mfunc_)
-
-#define DEFINE_MATH_BUILTIN_C(code, name, argtype) \
-    DO_DEFINE_MATH_BUILTIN (code, name, argtype, mfunc_) \
-    DO_DEFINE_MATH_BUILTIN (C##code, "c" name, argtype, mfunc_c)
+#define DO_DEFINE_MATH_BUILTIN(code, name, argtype, tbase, const, compat) \
+     gfc_define_builtin ("__builtin_" name "l", tbase##longdouble[argtype], \
+			BUILT_IN_ ## code ## L, \
+			(compat && flag_opencl_math_builtins) ? name : name "l", const); \
+     gfc_define_builtin ("__builtin_" name, tbase##double[argtype], \
+			BUILT_IN_ ## code, name, const); \
+     gfc_define_builtin ("__builtin_" name "f", tbase##float[argtype], \
+			BUILT_IN_ ## code ## F, \
+			(compat && flag_opencl_math_builtins) ? name : name "f", const);
+ 
+#define DEFINE_MATH_BUILTIN(code, name, argtype, const, compat) \
+    DO_DEFINE_MATH_BUILTIN (code, name, argtype, mfunc_, const, compat)
+ 
+#define DEFINE_MATH_BUILTIN_C(code, name, argtype, const, compat) \
+    DO_DEFINE_MATH_BUILTIN (code, name, argtype, mfunc_, const, compat) \
+    DO_DEFINE_MATH_BUILTIN (C##code, "c" name, argtype, mfunc_c, const, 0)
 
 
 /* Create function types for builtin functions.  */
@@ -807,19 +806,15 @@
 
 #include "mathbuiltins.def"
 
-  gfc_define_builtin ("__builtin_roundl", mfunc_longdouble[0], 
-		      BUILT_IN_ROUNDL, "roundl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_round", mfunc_double[0], 
-		      BUILT_IN_ROUND, "round", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_roundf", mfunc_float[0], 
-		      BUILT_IN_ROUNDF, "roundf", ATTR_CONST_NOTHROW_LEAF_LIST);
-
-  gfc_define_builtin ("__builtin_truncl", mfunc_longdouble[0],
-		      BUILT_IN_TRUNCL, "truncl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_trunc", mfunc_double[0],
-		      BUILT_IN_TRUNC, "trunc", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_truncf", mfunc_float[0],
-		      BUILT_IN_TRUNCF, "truncf", ATTR_CONST_NOTHROW_LEAF_LIST);
+  DEFINE_MATH_BUILTIN (ROUND, "round", 0, true, 1);
+  DEFINE_MATH_BUILTIN (TRUNC, "trunc", 0, true, 1);
+  DEFINE_MATH_BUILTIN (COPYSIGN, "copysign", 1, true, 1);
+  DEFINE_MATH_BUILTIN (NEXTAFTER, "nextafter", 1, true, 1);
+  DEFINE_MATH_BUILTIN (FREXP, "frexp", 4, false, 1);
+  DEFINE_MATH_BUILTIN (FABS, "fabs", 0, true, 1);
+
+  /* We define these separately as the fortran versions have different
+     semantics (they return an integer type) */
 
   gfc_define_builtin ("__builtin_cabsl", func_clongdouble_longdouble, 
 		      BUILT_IN_CABSL, "cabsl", ATTR_CONST_NOTHROW_LEAF_LIST);
@@ -827,54 +822,6 @@
 		      BUILT_IN_CABS, "cabs", ATTR_CONST_NOTHROW_LEAF_LIST);
   gfc_define_builtin ("__builtin_cabsf", func_cfloat_float, 
 		      BUILT_IN_CABSF, "cabsf", ATTR_CONST_NOTHROW_LEAF_LIST);
- 
-  gfc_define_builtin ("__builtin_copysignl", mfunc_longdouble[1], 
-		      BUILT_IN_COPYSIGNL, "copysignl",
-		      ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_copysign", mfunc_double[1], 
-		      BUILT_IN_COPYSIGN, "copysign",
-		      ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_copysignf", mfunc_float[1], 
-		      BUILT_IN_COPYSIGNF, "copysignf",
-		      ATTR_CONST_NOTHROW_LEAF_LIST);
- 
-  gfc_define_builtin ("__builtin_nextafterl", mfunc_longdouble[1], 
-		      BUILT_IN_NEXTAFTERL, "nextafterl",
-		      ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_nextafter", mfunc_double[1], 
-		      BUILT_IN_NEXTAFTER, "nextafter",
-		      ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_nextafterf", mfunc_float[1], 
-		      BUILT_IN_NEXTAFTERF, "nextafterf",
-		      ATTR_CONST_NOTHROW_LEAF_LIST);
- 
-  gfc_define_builtin ("__builtin_frexpl", mfunc_longdouble[4], 
-		      BUILT_IN_FREXPL, "frexpl", ATTR_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_frexp", mfunc_double[4], 
-		      BUILT_IN_FREXP, "frexp", ATTR_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_frexpf", mfunc_float[4], 
-		      BUILT_IN_FREXPF, "frexpf", ATTR_NOTHROW_LEAF_LIST);
- 
-  gfc_define_builtin ("__builtin_fabsl", mfunc_longdouble[0], 
-		      BUILT_IN_FABSL, "fabsl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_fabs", mfunc_double[0], 
-		      BUILT_IN_FABS, "fabs", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_fabsf", mfunc_float[0], 
-		      BUILT_IN_FABSF, "fabsf", ATTR_CONST_NOTHROW_LEAF_LIST);
- 
-  gfc_define_builtin ("__builtin_scalbnl", mfunc_longdouble[5], 
-		      BUILT_IN_SCALBNL, "scalbnl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_scalbn", mfunc_double[5], 
-		      BUILT_IN_SCALBN, "scalbn", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_scalbnf", mfunc_float[5], 
-		      BUILT_IN_SCALBNF, "scalbnf", ATTR_CONST_NOTHROW_LEAF_LIST);
- 
-  gfc_define_builtin ("__builtin_fmodl", mfunc_longdouble[1], 
-		      BUILT_IN_FMODL, "fmodl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_fmod", mfunc_double[1], 
-		      BUILT_IN_FMOD, "fmod", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_fmodf", mfunc_float[1], 
-		      BUILT_IN_FMODF, "fmodf", ATTR_CONST_NOTHROW_LEAF_LIST);
 
   /* lround{f,,l} and llround{f,,l} */
   ftype = build_function_type_list (long_integer_type_node,
@@ -905,18 +852,8 @@
 		      "llroundl", ATTR_CONST_NOTHROW_LEAF_LIST);
 
   /* These are used to implement the ** operator.  */
-  gfc_define_builtin ("__builtin_powl", mfunc_longdouble[1], 
-		      BUILT_IN_POWL, "powl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_pow", mfunc_double[1], 
-		      BUILT_IN_POW, "pow", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_powf", mfunc_float[1], 
-		      BUILT_IN_POWF, "powf", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_cpowl", mfunc_clongdouble[1], 
-		      BUILT_IN_CPOWL, "cpowl", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_cpow", mfunc_cdouble[1], 
-		      BUILT_IN_CPOW, "cpow", ATTR_CONST_NOTHROW_LEAF_LIST);
-  gfc_define_builtin ("__builtin_cpowf", mfunc_cfloat[1], 
-		      BUILT_IN_CPOWF, "cpowf", ATTR_CONST_NOTHROW_LEAF_LIST);
+  DEFINE_MATH_BUILTIN_C (POW, "pow", 1, true, 1);
+
   gfc_define_builtin ("__builtin_powil", mfunc_longdouble[2], 
 		      BUILT_IN_POWIL, "powil", ATTR_CONST_NOTHROW_LEAF_LIST);
   gfc_define_builtin ("__builtin_powi", mfunc_double[2], 
@@ -927,15 +864,8 @@
 
   if (TARGET_C99_FUNCTIONS)
     {
-      gfc_define_builtin ("__builtin_cbrtl", mfunc_longdouble[0],
-			  BUILT_IN_CBRTL, "cbrtl",
-			  ATTR_CONST_NOTHROW_LEAF_LIST);
-      gfc_define_builtin ("__builtin_cbrt", mfunc_double[0],
-			  BUILT_IN_CBRT, "cbrt",
-			  ATTR_CONST_NOTHROW_LEAF_LIST);
-      gfc_define_builtin ("__builtin_cbrtf", mfunc_float[0],
-			  BUILT_IN_CBRTF, "cbrtf",
-			  ATTR_CONST_NOTHROW_LEAF_LIST);
+      DEFINE_MATH_BUILTIN (CBRT, "cbrt", 0, true, 1);
+
       gfc_define_builtin ("__builtin_cexpil", func_longdouble_clongdouble, 
 			  BUILT_IN_CEXPIL, "cexpil",
 			  ATTR_CONST_NOTHROW_LEAF_LIST);
--- a/gcc-4.6.3/gcc/fortran/trans-intrinsic.c	2011-09-15 13:15:58.000000000 +0400
+++ b/gcc-4.6.3/gcc/fortran/trans-intrinsic.c	2011-09-15 20:27:15.986562909 +0400
@@ -87,13 +87,13 @@
 /* ??? The NARGS==1 hack here is based on the fact that (c99 at least)
    defines complex variants of all of the entries in mathbuiltins.def
    except for atan2.  */
-#define DEFINE_MATH_BUILTIN(ID, NAME, ARGTYPE) \
+#define DEFINE_MATH_BUILTIN(ID, NAME, ARGTYPE, NOT_USED1, NOT_USED2) \
   { GFC_ISYM_ ## ID, BUILT_IN_ ## ID ## F, BUILT_IN_ ## ID, \
     BUILT_IN_ ## ID ## L, END_BUILTINS, END_BUILTINS, END_BUILTINS, \
     true, false, true, NAME, NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE, \
     NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE},
 
-#define DEFINE_MATH_BUILTIN_C(ID, NAME, ARGTYPE) \
+#define DEFINE_MATH_BUILTIN_C(ID, NAME, ARGTYPE, NOT_USED1, NOT_USED2) \
   { GFC_ISYM_ ## ID, BUILT_IN_ ## ID ## F, BUILT_IN_ ## ID, \
     BUILT_IN_ ## ID ## L, BUILT_IN_C ## ID ## F, BUILT_IN_C ## ID, \
     BUILT_IN_C ## ID ## L, true, true, true, NAME, NULL_TREE, NULL_TREE, \
--- a/gcc-4.6.3/gcc/fortran/trans-intrinsic.c	2011-09-16 02:35:10.007393894 +0400
+++ b/gcc-4.6.3/gcc/fortran/trans-intrinsic.c	2011-09-16 02:35:33.057426089 +0400
@@ -651,8 +651,8 @@
     tmp = tree_cons (NULL_TREE, complex_float128_type_node, tmp);
     func_cpow = build_function_type (complex_float128_type_node, tmp);
 
-#define DEFINE_MATH_BUILTIN(ID, NAME, ARGTYPE)
-#define DEFINE_MATH_BUILTIN_C(ID, NAME, ARGTYPE)
+#define DEFINE_MATH_BUILTIN(ID, NAME, ARGTYPE, NOT_USED1, NOT_USED2)
+#define DEFINE_MATH_BUILTIN_C(ID, NAME, ARGTYPE, NOT_USED1, NOT_USED2)
 #define LIB_FUNCTION(ID, NAME, HAVE_COMPLEX)
 
     /* Only these built-ins are actually needed here. These are used directly
